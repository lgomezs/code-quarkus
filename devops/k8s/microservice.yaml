apiVersion: v1
kind: Service
metadata:
  name: myapp
  namespace: applications
  labels:
    app: myapp
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/path: "/q/health/ready"
    prometheus.io/port: "8080"
spec:
  type: NodePort  # esto permite exponerlo fuera del cl√∫ster
  selector:
    app: myapp
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30089 # puedes elegir entre 30000-32767
      name: http

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  namespace: applications
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: lgomezs/quarkus-app:2.0
          ports:
            - containerPort: 8080
          env:
            - name: QUARKUS_PROFILE
              value: dev
            - name: IP_DATASOURCE
              value: 10.100.81.70
            - name: IP_TEMPO
              value: http://tempo.monitoring:4317
          livenessProbe:
            httpGet:
              path: /q/health/live
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 15
